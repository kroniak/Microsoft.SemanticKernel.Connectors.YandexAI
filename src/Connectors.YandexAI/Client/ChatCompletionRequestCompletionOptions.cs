using System.Text.Json.Serialization;

namespace Microsoft.SemanticKernel.Connectors.YandexAI.Client;

/// <summary>
///     Represents options for completing chat requests.
/// </summary>
internal sealed record ChatCompletionRequestCompletionOptions
{
    /// <summary>
    ///     Represents the temperature property for configuring chat completion request options.
    ///     Affects creativity and randomness of responses. Should be a double number between 0 (inclusive) and 1 (inclusive).
    ///     Lower values produce more straightforward responses while higher values lead to increased creativity and
    ///     randomness.
    ///     Default temperature: 0.3
    /// </summary>
    [JsonPropertyName("temperature")]
    public double Temperature { get; set; } = 0.3;

    /// <summary>
    ///     Represents the maximum number of tokens to generate in a chat completion request.
    /// </summary>
    /// <remarks>
    ///     The MaxTokens property controls the length of the generated text output in a chat completion request.
    ///     This property specifies the maximum number of tokens to generate and return in the response.
    /// </remarks>
    [JsonPropertyName("maxTokens")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public int? MaxTokens { get; set; }

    /// <summary>
    ///     Represents a property that determines whether the chat completion request should be streamed.
    /// </summary>
    [JsonPropertyName("stream")]
    public bool Stream { get; set; } = false;

    /// <summary>
    ///     Gets or sets the response format for the chat completion request.
    /// </summary>
    /// <remarks>
    ///     This property determines the format of the response generated by the chat completion process.
    /// </remarks>
    [Obsolete("Not supported yet")]
    [JsonPropertyName("response_format")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public object? ResponseFormat { get; set; }

    /// <summary>
    ///     Specifies the reasoning mode to be used.
    ///     REASONING_MODE_UNSPECIFIED: Unspecified reasoning mode.
    ///     DISABLED: Disables reasoning. The model will generate a response without performing any internal reasoning.
    ///     ENABLED_HIDDEN: Enables reasoning in a hidden manner without exposing the reasoning steps to the user.
    /// </summary>
    [JsonPropertyName("reasoningOptions")]
    [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
    public string? ReasoningOptions { get; set; }
}